name: Pull-Request Actions

on:
  pull_request:
    branches: [test, dev, master]
    paths-ignore: [README.md, .editorconfig, .gitignore, '**.md']

env:
  TF_VERSION: 0.15.1
  AWS_REGION: 'us-east-1'
  PYTHON_VERSION: 3.7
  TFLINT_VERSION: v0.30.0

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Generate tfvars path and setup AWS creds
        if: ${{ github.event.pull_request.sender.login != "ACT" }}
        run: |
          export GITHUB_REF=${github_ref//\"}
          if [[ "${GITHUB_REF}" == **"test" ]]; then
            echo "STAGE=test" >> $GITHUB_ENV
            echo "REGION=us-east-1" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
            echo "AWS_ACCESS_KEY_ID=${{ secrets.TEST_AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
            echo "AWS_ROLE_TO_ASSUME=${{ secrets.TEST_AWS_ROLE_TO_ASSUME }}" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == **"dev" ]]; then
            echo "STAGE=dev" >> $GITHUB_ENV
            echo "REGION=us-east-1" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
            echo "AWS_ACCESS_KEY_ID=${{ secrets.DEV_AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
            echo "AWS_ROLE_TO_ASSUME=${{ secrets.DEV_AWS_ROLE_TO_ASSUME }}" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == **"master" ]]; then
            echo "STAGE=prod" >> $GITHUB_ENV
            echo "REGION=eu-central-1" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
            echo "AWS_ACCESS_KEY_ID=${{ secrets.PROD_AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
            echo "AWS_ROLE_TO_ASSUME=${{ secrets.PROD_AWS_ROLE_TO_ASSUME }}" >> $GITHUB_ENV
          else
            exit 1
          fi
        env:
          github_ref: ${{ toJson(github.base_ref) }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        if: ${{ github.event.pull_request.sender.login != "ACT" }}
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1200

      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: >
          terraform init
          -backend-config=tfvars/${{ env.STAGE }}/${{ env.REGION }}/backend.tfvars

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: ${{ env.TFLINT_VERSION }}

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint -f compact

      - name: Terraform security scan
        uses: aquasecurity/tfsec-pr-commenter-action@main
        if: ${{ github.event.pull_request.sender.login != "ACT" }}
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          framework: terraform
          soft_fail: true
          quiet: true

      - name: Terraform Plan
        id: terraform-plan
        run: >
          terraform plan
          -no-color
          -var-file="tfvars/${{ env.STAGE }}/${{ env.REGION }}/${{ env.STAGE }}.tfvars"
